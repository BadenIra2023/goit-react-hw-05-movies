{"version":3,"file":"static/js/278.4158306b.chunk.js","mappings":"4LAEaA,EAAS,WAClB,OAAQ,iBAAKC,MAAO,CAAEC,UAAW,SAAUC,WAAY,QAA/C,WACJ,SAAC,KAAD,CACIC,OAAO,MACPC,MAAM,MACNC,MAAM,UACNC,eAAe,UACfC,OAAO,OACPC,UAAU,wBACVC,aAAc,CAAC,EACfC,aAAa,GACbC,SAAS,IACX,MACF,C,+LCbRC,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAU,mCAEHC,EAAU,mCAAG,oGACCF,EAAAA,EAAAA,IAAA,oCACOC,IAFR,cAChBE,EADgB,yBAGfA,EAASC,KAAKC,SAHC,2CAAH,qDAMVC,EAAgB,mCAAG,WAAOC,GAAP,uFACLP,EAAAA,EAAAA,IAAA,iBACRO,EADQ,oBACUN,IAFL,cACtBE,EADsB,yBAIrBA,EAASC,MAJY,2CAAH,sDAMhBI,EAAa,mCAAG,WAAOD,GAAP,uFACFP,EAAAA,EAAAA,IAAA,iBACRO,EADQ,4BACkBN,IAFhB,cACnBE,EADmB,yBAIlBA,EAASC,KAAKK,MAJI,2CAAH,sDAObC,EAAe,mCAAG,WAAOH,GAAP,uFACJP,EAAAA,EAAAA,IAAA,iBACRO,EADQ,4BACkBN,IAFd,cACrBE,EADqB,yBAIpBA,EAASC,KAAKC,SAJM,2CAAH,sDAOfM,EAAc,mCAAG,WAAOJ,GAAP,uFACHP,EAAAA,EAAAA,IAAA,8BACKO,EADL,oBACuBN,IAFpB,cACpBE,EADoB,yBAInBA,EAASC,KAAKC,SAJK,2CAAH,qD,+JCzBdO,EAAS,WAEpB,OAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAaF,EAAaG,IAAI,SACpC,GAA0BC,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAAkCJ,EAAAA,EAAAA,UAAS,IAA3C,eAAOK,EAAP,KAAkBC,EAAlB,KACMC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACT,GAAKX,EAAL,CACC,IAAMY,EAAU,mCAAG,oGAEjBN,GAAa,GAFI,UAGMX,EAAAA,EAAAA,IAAeK,GAHrB,OAGXb,EAHW,OAIjBqB,EAAarB,GAJI,gDAQnBiB,EAAS,KAAMS,SAEbC,QAAQC,IAAR,MAViB,yBAafT,GAAa,GAbE,4EAAH,qDAgBhBM,GAjBwB,CAkBzB,GAAE,CAACZ,IAYN,OACI,4BACI,kBAAMgB,SAVW,SAAAC,GACjBA,EAAMC,iBACN,IAAMC,EAAcF,EAAMG,OAAOC,SAASC,OAAOC,MAAMC,OACvDV,QAAQC,IAAII,GACZpB,EAAgB,CAAE0B,MAAON,GAC5B,EAKG,WACI,kBAAOO,KAAK,OACRC,KAAK,SACLC,YAAY,yBACZC,UAAQ,EACRC,UAAW,KACf,mBAAQJ,KAAK,SAAb,SAAuB,cAEnB,OAAVvB,IACE,eAAG4B,UAAU,UAAb,UAAuB,6DACsC5B,KAGhEE,IAAa,SAAC,IAAD,IACbE,EAAUyB,OAAS,IAChB,wBACGzB,EAAU0B,KAAI,SAAAC,GAAQ,OACrB,yBACE,SAAC,KAAD,CACEC,MAAO,CAAEC,KAAM3B,GACf4B,GAAE,kBAAaH,EAASI,IAF1B,SAIGJ,EAASK,SALLL,EAASI,GADG,QAc7B,EAEJ,W","sources":["components/Loader/Loader.jsx","components/api.js","pages/Movies/Movies.jsx"],"sourcesContent":["import {MutatingDots} from 'react-loader-spinner';\n\nexport const Loader = () => {\n    return (<div style={{ textAlign: 'center', paddingTop: '20px' }}>\n        <MutatingDots\n            height=\"100\"\n            width=\"100\"\n            color=\"#4fa94d\"\n            secondaryColor='#4fa94d'\n            radius='12.5'\n            ariaLabel=\"mutating-dots-loading\"\n            wrapperStyle={{}}\n            wrapperClass=\"\"\n            visible={true}\n        /> </div>\n    ); }","import axios from \"axios\";\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = \"7da6375676c882cd7263be89e48276aa\";\n\nexport const fetchFilms = async () => {\n    const response = await axios.get\n    (`/trending/all/day?api_key=${API_KEY}`)\n    return response.data.results;\n}\n\nexport const fetchFilmDetails = async (filmId) => {\n    const response = await axios.get\n        (`/movie/${filmId}?api_key=${API_KEY}`)\n\n    return response.data;\n}\nexport const fetchFilmCast = async (filmId) => {\n    const response = await axios.get\n        (`/movie/${filmId}/credits?api_key=${API_KEY}`)\n  \n    return response.data.cast;\n}\n \nexport const fetchFilmReview = async (filmId) => {\n    const response = await axios.get\n        (`/movie/${filmId}/reviews?api_key=${API_KEY}`)\n\n    return response.data.results;\n}\n\nexport const fetchFilmQuery = async (filmId) => {\n    const response = await axios.get\n        (`/search/movie?query=${filmId}&api_key=${API_KEY}`)\n\n    return response.data.results;\n}\n\n \n","\nimport React, { useEffect, useState } from \"react\";\nimport { Link, useLocation, useSearchParams } from \"react-router-dom\";\nimport { fetchFilmQuery } from \"../../components/api\"\nimport { Loader } from \"../../components/Loader/Loader\";\n\nexport const Movies = () => {\n\n  const [searchParams, setSearchParams] = useSearchParams();\n  const searchTerm = searchParams.get(\"query\");\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [getquerys, setGetQuerys] = useState([]);\n  const location = useLocation();  \n  \n  useEffect(() => {\n   if (!searchTerm) {return}\n    const SearchForm = async () => {\n      try {\n      setIsLoading(true);\n      const response = await fetchFilmQuery(searchTerm)\n      setGetQuerys(response)\n      \n      }\n    catch (error) {\n    setError(error.message);\n    /*  Notiflix.Notify.failure(`Something went wrong. Please try again.${error}`); */\n      console.log(error)\n      }\n       finally {\n        setIsLoading(false);\n      }\n    }  \n    SearchForm();\n  }, [searchTerm]);\n\n\n\n    const handleSubmit = event => {\n        event.preventDefault();\n        const searchValue = event.target.children.search.value.trim();\n        console.log(searchValue)\n        setSearchParams({ query: searchValue,})\n    }\n\n\nreturn (\n    <div>\n        <form onSubmit={handleSubmit}>\n            <input type=\"text\"\n                name=\"search\"\n                placeholder=\"Please enter a keyword\"\n                required\n                minLength={2}/>\n            <button type=\"submit\" >Search</button>\n    </form>\n     {error !== null && (\n        <p className=\"c-error\">\n          Oops, some error occured. Please, try again later. Error: {error}\n        </p>\n    )}\n    {isLoading && <Loader />}\n    {getquerys.length > 0 && (\n        <ul>\n          {getquerys.map(getquery => (\n            <li key={getquery.id}>\n              <Link\n                state={{ from: location }}\n                to={`/movies/${getquery.id}`}\n              >\n                {getquery.title}\n              </Link>\n            </li>\n          ))}\n        </ul>\n      )}\n </div>\n    )\n   }\n\nexport default Movies"],"names":["Loader","style","textAlign","paddingTop","height","width","color","secondaryColor","radius","ariaLabel","wrapperStyle","wrapperClass","visible","axios","API_KEY","fetchFilms","response","data","results","fetchFilmDetails","filmId","fetchFilmCast","cast","fetchFilmReview","fetchFilmQuery","Movies","useSearchParams","searchParams","setSearchParams","searchTerm","get","useState","error","setError","isLoading","setIsLoading","getquerys","setGetQuerys","location","useLocation","useEffect","SearchForm","message","console","log","onSubmit","event","preventDefault","searchValue","target","children","search","value","trim","query","type","name","placeholder","required","minLength","className","length","map","getquery","state","from","to","id","title"],"sourceRoot":""}