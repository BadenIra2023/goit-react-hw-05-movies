{"version":3,"file":"static/js/135.33257645.chunk.js","mappings":"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","sources":["components/Loader/Loader.jsx","components/api.js","webpack://react-homework-template/./src/pages/MovieDetails/MovieDetails.module.css?0c24","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import {MutatingDots} from 'react-loader-spinner';\n\nexport const Loader = () => {\n    return (<div style={{ textAlign: 'center', paddingTop: '20px' }}>\n        <MutatingDots\n            height=\"100\"\n            width=\"100\"\n            color=\"#4fa94d\"\n            secondaryColor='#4fa94d'\n            radius='12.5'\n            ariaLabel=\"mutating-dots-loading\"\n            wrapperStyle={{}}\n            wrapperClass=\"\"\n            visible={true}\n        /> </div>\n    ); }","import axios from \"axios\";\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = \"7da6375676c882cd7263be89e48276aa\";\n\nexport const fetchFilms = async () => {\n    const response = await axios.get\n    (`/trending/all/day?api_key=${API_KEY}`)\n    return response.data.results;\n}\n\nexport const fetchFilmDetails = async (filmId) => {\n    const response = await axios.get\n        (`/movie/${filmId}?api_key=${API_KEY}`)\n\n    return response.data;\n}\nexport const fetchFilmCast = async (filmId) => {\n    const response = await axios.get\n        (`/movie/${filmId}/credits?api_key=${API_KEY}`)\n  \n    return response.data.cast;\n}\n \nexport const fetchFilmReview = async (filmId) => {\n    const response = await axios.get\n        (`/movie/${filmId}/reviews?api_key=${API_KEY}`)\n\n    return response.data.results;\n}\n\nexport const fetchFilmQuery = async (filmId) => {\n    const response = await axios.get\n        (`/search/movie?query=${filmId}&api_key=${API_KEY}`)\n\n    return response.data.results;\n}\n\n \n","// extracted by mini-css-extract-plugin\nexport default {\"poster\":\"MovieDetails_poster__yO7gD\",\"cerror\":\"MovieDetails_cerror__h91oY\",\"buton\":\"MovieDetails_buton__Yddvv\"};","import { useParams, useLocation } from \"react-router-dom\";\nimport { useEffect, useState, useRef, lazy, Suspense } from \"react\";\nimport { fetchFilmDetails } from \"../../components/api\";\nimport Notiflix from 'notiflix'; \nimport { Loader } from \"../../components/Loader/Loader\";\nimport css from \"./MovieDetails.module.css\";\nimport { Link, Routes, Route } from \"react-router-dom\";\n\n\nconst Cast = lazy(() => import(\"../../components/Cast/Cast\"));\nconst Reviews = lazy(() => import(\"../../components/Reviews/Reviews\")); \n\nexport const MovieDetails = () => {\n  const params = useParams()\n/*  const [getFilm, setGetFilm] = useState() */\n  const [poster, setPoster] = useState(\"\")\n  const [title, setTitle] = useState(\"\")\n  const [overview, setOverview] = useState(\"\")\n  const [genres, setGenres] = useState([])\n  const [release, setRelease] = useState(\"\")\n  const [average, setAverage] = useState(0)\n  const [isLoading, setIsLoading] = useState(false);\n  const [filmId, setFilmId]= useState(\"\")\n  const location = useLocation();\n  \n  const backLinkHome = useRef(location.state?.from ?? '/');\n  \n  const [error, setError] = useState(null);\n \n     useEffect(() => {\n    const getFilmDetails = async () => {\n     if (params === \"\") { return }\n     setIsLoading(true);\n    try {\n      const response = await fetchFilmDetails(params.imageId)\n   /*   setGetFilm(response) */\n      setFilmId(params.imageId)\n      console.log(response)\n      setPoster(response.poster_path)\n      setTitle(response.original_title)\n      setOverview(response.overview)\n      setGenres(response.genres)\n      setRelease(response.release_date)\n      setAverage(response.vote_average)\n        \n }\n    catch (error) {\n      Notiflix.Notify.failure(\"Something went wrong. Please try again.\");\n       setError(error)\n        console.log(error)\n    }\n    finally {\n    setIsLoading(false);\n    };\n    }  \n    getFilmDetails();\n     }, [params]);\n  \n  \n  return (\n    <div>\n        <div className={css.poster}> \n           \n        <div >\n            <Link className={css.buton} to={backLinkHome.current}>Go back</Link>\n            {error !== null && (\n        <p className={css.cerror}>\n          Oops, some error occured. Please, try again later. Error: {error}\n        </p>\n            )} \n            {isLoading && <Loader />}\n        <img src={`https://image.tmdb.org/t/p/w500/${poster}`} alt={title}\n              width={300}\n              loading=\"lazy\" /></div>\n        <div>\n        <h2>{`${title}  (${release.split('-')[0]})`}</h2>\n        <p>User Score: {(average.toFixed(1))*10}  %</p>\n        <h3>Overview</h3>\n          <p>{overview}</p>\n        <h3>Genres</h3>\n            <p>  {genres?.length>0 && genres.map(({ id, name }) => <span key={id}>  {name},</span>)}</p>\n          </div>\n          \n      </div>\n      <h2>Additional information</h2>\n      <ul >\n       <li><Link to=\"cast\"> Cast </Link> </li>\n       <li><Link to=\"reviews\">   Reviews</Link> </li>\n      </ul>\n      <Suspense>\n       <Routes>\n          <Route path=\"cast\" element={<Cast filmId={filmId} />} />\n          <Route path=\"reviews\" element={<Reviews filmId={filmId}/>} />\n        </Routes>\n      </Suspense>\n      </div>\n    )\n} \nexport default  MovieDetails"],"names":["Loader","style","textAlign","paddingTop","height","width","color","secondaryColor","radius","ariaLabel","wrapperStyle","wrapperClass","visible","axios","API_KEY","fetchFilms","response","data","results","fetchFilmDetails","filmId","fetchFilmCast","cast","fetchFilmReview","fetchFilmQuery","Cast","lazy","Reviews","MovieDetails","params","useParams","useState","poster","setPoster","title","setTitle","overview","setOverview","genres","setGenres","release","setRelease","average","setAverage","isLoading","setIsLoading","setFilmId","location","useLocation","backLinkHome","useRef","state","from","error","setError","useEffect","getFilmDetails","imageId","console","log","poster_path","original_title","release_date","vote_average","Notiflix","className","css","to","current","src","alt","loading","split","toFixed","length","map","id","name","Suspense","path","element"],"sourceRoot":""}